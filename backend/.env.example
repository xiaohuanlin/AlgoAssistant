# AlgoAssistant Backend Environment Variables Template
# Copy this file to .env and fill in your actual values

# ================================
# DATABASE CONFIGURATION
# ================================

# Development (SQLite) - Default
DATABASE_URL=sqlite:///./algoassistant.db

# Production (PostgreSQL) - Uncomment and configure for production
# DATABASE_URL=postgresql://username:password@localhost:5432/algoassistant

# Database connection settings
DATABASE_ECHO=false  # Set to true for SQL query logging

# SQLite optimization settings (for lightweight deployments)
# SQLITE_TIMEOUT=30000
# SQLITE_POOL_SIZE=5
# SQLITE_MAX_OVERFLOW=10

# ================================
# SECURITY CONFIGURATION
# ================================

# JWT Secret Key - CHANGE THIS IN PRODUCTION!
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT Token expiration (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Password hashing algorithm (default: bcrypt)
PASSWORD_HASH_ALGORITHM=bcrypt

# ================================
# APPLICATION SETTINGS
# ================================

# Environment (development, production, testing)
ENVIRONMENT=development

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Application host and port
HOST=0.0.0.0
PORT=8000

# CORS settings
CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]

# ================================
# REDIS CONFIGURATION (for Celery)
# ================================

# Redis URL for caching and Celery message broker
REDIS_URL=redis://localhost:6379/0

# Celery settings
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ================================
# EXTERNAL SERVICE INTEGRATIONS
# ================================

# GitHub OAuth Integration
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URI=http://localhost:8000/api/github/callback

# Google OAuth Integration
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:8000/api/google/callback

# LeetCode Integration
LEETCODE_SESSION_COOKIE=your-leetcode-session-cookie
LEETCODE_CSRF_TOKEN=your-leetcode-csrf-token

# Notion Integration
NOTION_CLIENT_ID=your-notion-client-id
NOTION_CLIENT_SECRET=your-notion-client-secret
NOTION_REDIRECT_URI=http://localhost:8000/api/notion/callback

# Gemini AI Integration
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-pro

# ================================
# EMAIL CONFIGURATION (Optional)
# ================================

# SMTP Settings for email notifications
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password
SMTP_USE_TLS=true

# Email sender information
FROM_EMAIL=noreply@algoassistant.com
FROM_NAME=AlgoAssistant

# ================================
# FILE UPLOAD CONFIGURATION
# ================================

# Upload directory (relative to backend root)
UPLOAD_DIR=uploads

# Maximum file size (in bytes) - Default: 5MB
MAX_FILE_SIZE=5242880

# Allowed file extensions for uploads
ALLOWED_EXTENSIONS=["jpg", "jpeg", "png", "gif", "pdf", "txt", "md"]

# ================================
# RATE LIMITING (Optional)
# ================================

# Rate limiting settings
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# ================================
# MONITORING & OBSERVABILITY
# ================================

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Application insights/metrics (optional)
# APPLICATIONINSIGHTS_CONNECTION_STRING=your-connection-string

# ================================
# DEVELOPMENT SETTINGS
# ================================

# Enable development features
DEBUG=false

# Enable auto-reload in development
RELOAD=true

# Enable profiling (development only)
ENABLE_PROFILING=false

# Test database URL (for testing)
TEST_DATABASE_URL=sqlite:///./test.db

# ================================
# PRODUCTION OVERRIDES
# ================================

# Uncomment and modify these settings for production:

# Production database
# DATABASE_URL=postgresql://user:password@db-host:5432/algoassistant_prod

# Production Redis
# REDIS_URL=redis://redis-host:6379/0

# Production security
# SECRET_KEY=your-production-secret-key
# ACCESS_TOKEN_EXPIRE_MINUTES=60

# Production CORS
# CORS_ORIGINS=["https://yourdomain.com", "https://www.yourdomain.com"]

# Production logging
# LOG_LEVEL=INFO
# SENTRY_DSN=https://your-production-sentry-dsn

# Production email
# SMTP_SERVER=your-production-smtp-server
# SMTP_USERNAME=your-production-email
# FROM_EMAIL=noreply@yourdomain.com

# ================================
# FEATURE FLAGS (Optional)
# ================================

# Enable/disable specific features
ENABLE_USER_REGISTRATION=true
ENABLE_EMAIL_NOTIFICATIONS=true
ENABLE_GITHUB_INTEGRATION=true
ENABLE_NOTION_INTEGRATION=true
ENABLE_LEETCODE_INTEGRATION=true
ENABLE_GEMINI_INTEGRATION=true
ENABLE_REVIEW_SYSTEM=true

# Background task processing
ENABLE_BACKGROUND_TASKS=true
CELERY_WORKER_CONCURRENCY=2

# ================================
# MEMORY OPTIMIZATION SETTINGS
# ================================
# Additional settings for resource-constrained deployments (optional)

# Python optimization flags
# PYTHONOPTIMIZE=1
# PYTHONDONTWRITEBYTECODE=1
# PYTHONHASHSEED=random
# PYTHONUNBUFFERED=1

# Server process limits
# UVICORN_WORKERS=1
# WEB_CONCURRENCY=1

# ================================
# NOTES
# ================================

# 1. Never commit this file with real secrets to version control
# 2. Use environment-specific .env files (.env.dev, .env.prod)
# 3. For production, consider using environment variables directly
# 4. Rotate secrets regularly, especially JWT keys
# 5. Use strong, unique passwords for all services
# 6. Enable 2FA for all external service accounts
