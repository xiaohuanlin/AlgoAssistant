# AlgoAssistant Mini Deployment Configuration - 1GB Memory Optimized
# Based on .env.example with lightweight production settings

# ================================
# DATABASE CONFIGURATION
# ================================

# SQLite database for lightweight deployment with WAL mode for better concurrency
DATABASE_URL=sqlite:///app/data/algo_assistant.db?mode=rwc&cache=shared&_busy_timeout=30000&_journal_mode=WAL&_synchronous=NORMAL

# Database connection settings
DATABASE_ECHO=false

# SQLite optimization settings (not in .env.example but needed for mini deployment)
SQLITE_TIMEOUT=30000
SQLITE_POOL_SIZE=5
SQLITE_MAX_OVERFLOW=10

# ================================
# SECURITY CONFIGURATION
# ================================

# JWT Secret Key - CHANGE THIS IN PRODUCTION!
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT Token expiration (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=60

# Password hashing algorithm (default: bcrypt)
PASSWORD_HASH_ALGORITHM=bcrypt

# ================================
# APPLICATION SETTINGS
# ================================

# Environment (development, production, testing)
ENVIRONMENT=production

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL) - WARNING for production to reduce I/O
LOG_LEVEL=WARNING

# Application host and port
HOST=0.0.0.0
PORT=8000

# CORS settings
CORS_ORIGINS=["http://localhost", "http://localhost:80"]

# ================================
# REDIS CONFIGURATION (for Celery)
# ================================

# Redis URL for caching and Celery message broker
REDIS_URL=redis://redis:6379/0

# Celery settings - different DB numbers for separation
CELERY_BROKER_URL=redis://redis:6379/1
CELERY_RESULT_BACKEND=redis://redis:6379/2

# ================================
# EXTERNAL SERVICE INTEGRATIONS
# ================================

# GitHub OAuth Integration (configure as needed)
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URI=http://localhost/api/github/callback

# Google OAuth Integration (configure as needed)
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost/api/google/callback

# LeetCode Integration (configure as needed)
LEETCODE_SESSION_COOKIE=your-leetcode-session-cookie
LEETCODE_CSRF_TOKEN=your-leetcode-csrf-token

# Notion Integration (configure as needed)
NOTION_CLIENT_ID=your-notion-client-id
NOTION_CLIENT_SECRET=your-notion-client-secret
NOTION_REDIRECT_URI=http://localhost/api/notion/callback

# Gemini AI Integration (configure as needed)
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-pro

# ================================
# EMAIL CONFIGURATION
# ================================

# SMTP Settings (configure as needed)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password
SMTP_USE_TLS=true

# Email sender information
FROM_EMAIL=noreply@algoassistant.com
FROM_NAME=AlgoAssistant

# ================================
# FILE UPLOAD CONFIGURATION
# ================================

# Upload directory
UPLOAD_DIR=/app/data/uploads

# Maximum file size - 5MB for memory optimization
MAX_FILE_SIZE=5242880

# Allowed file extensions
ALLOWED_EXTENSIONS=["jpg", "jpeg", "png", "gif", "pdf", "txt", "md"]

# ================================
# RATE LIMITING
# ================================

# Rate limiting for resource protection
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# ================================
# DEVELOPMENT SETTINGS
# ================================

# Disable debug features for production
DEBUG=false
RELOAD=false
ENABLE_PROFILING=false

# ================================
# FEATURE FLAGS
# ================================

# Enable/disable features
ENABLE_USER_REGISTRATION=true
ENABLE_EMAIL_NOTIFICATIONS=true
ENABLE_GITHUB_INTEGRATION=true
ENABLE_NOTION_INTEGRATION=true
ENABLE_LEETCODE_INTEGRATION=true
ENABLE_GEMINI_INTEGRATION=true
ENABLE_REVIEW_SYSTEM=true

# ================================
# MONITORING & OBSERVABILITY
# ================================

# Sentry DSN for error tracking (optional - disabled for mini deployment)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Application insights/metrics (optional - disabled for mini deployment)
# APPLICATIONINSIGHTS_CONNECTION_STRING=your-connection-string

# ================================
# DEVELOPMENT SETTINGS
# ================================

# Enable development features (disabled for production)
DEBUG=false

# Enable auto-reload in development (disabled for production)
RELOAD=false

# Enable profiling (development only - disabled for production)
ENABLE_PROFILING=false

# Test database URL (for testing - not used in mini deployment)
# TEST_DATABASE_URL=sqlite:///./test.db

# ================================
# FEATURE FLAGS
# ================================

# Enable/disable specific features
ENABLE_USER_REGISTRATION=true
ENABLE_EMAIL_NOTIFICATIONS=true
ENABLE_GITHUB_INTEGRATION=true
ENABLE_NOTION_INTEGRATION=true
ENABLE_LEETCODE_INTEGRATION=true
ENABLE_GEMINI_INTEGRATION=true
ENABLE_REVIEW_SYSTEM=true

# Background task processing - optimized for 1GB memory
ENABLE_BACKGROUND_TASKS=true
CELERY_WORKER_CONCURRENCY=1

# ================================
# MEMORY OPTIMIZATION SETTINGS
# ================================
# Additional settings for 1GB memory constraint (not in .env.example)

# Python optimization flags
PYTHONOPTIMIZE=1
PYTHONDONTWRITEBYTECODE=1
PYTHONHASHSEED=random
PYTHONUNBUFFERED=1

# Server process limits
UVICORN_WORKERS=1
WEB_CONCURRENCY=1
